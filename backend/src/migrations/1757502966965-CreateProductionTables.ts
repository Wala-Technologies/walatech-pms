import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateProductionTables1757502966965 implements MigrationInterface {
    name = 'CreateProductionTables1757502966965'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`tabTenant\` (\`id\` varchar(36) NOT NULL, \`name\` varchar(140) NOT NULL, \`subdomain\` varchar(140) NOT NULL, \`domain\` varchar(140) NULL, \`description\` varchar(255) NULL, \`status\` enum ('active', 'inactive', 'suspended', 'trial') NOT NULL DEFAULT 'trial', \`plan\` enum ('basic', 'standard', 'premium', 'enterprise') NOT NULL DEFAULT 'basic', \`trial_end_date\` date NULL, \`subscription_end_date\` date NULL, \`settings\` json NULL, \`features\` json NULL, \`max_users\` int NOT NULL DEFAULT '10', \`current_users\` int NOT NULL DEFAULT '0', \`contact_email\` varchar(140) NULL, \`contact_phone\` varchar(140) NULL, \`address\` varchar(255) NULL, \`city\` varchar(140) NULL, \`country\` varchar(140) NULL, \`timezone\` varchar(10) NOT NULL DEFAULT 'UTC', \`default_language\` varchar(10) NOT NULL DEFAULT 'en', \`default_currency\` varchar(10) NOT NULL DEFAULT 'ETB', \`creation\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` int NOT NULL DEFAULT '0', \`idx\` varchar(140) NULL, UNIQUE INDEX \`IDX_aae07c1d4e5e4552f8d5f1cbd2\` (\`name\`), UNIQUE INDEX \`IDX_a2e29961f7f743293fff382608\` (\`subdomain\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`tabUser\` (\`id\` varchar(36) NOT NULL, \`email\` varchar(140) NOT NULL, \`first_name\` varchar(140) NOT NULL, \`last_name\` varchar(140) NULL, \`password\` varchar(255) NOT NULL, \`enabled\` tinyint NOT NULL DEFAULT 1, \`language\` varchar(10) NOT NULL DEFAULT 'en', \`time_zone\` varchar(50) NOT NULL DEFAULT 'Africa/Addis_Ababa', \`mobile_no\` varchar(140) NULL, \`role_profile_name\` varchar(140) NULL, \`creation\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`modified\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`modified_by\` varchar(140) NULL, \`owner\` varchar(140) NULL, \`docstatus\` int NOT NULL DEFAULT '0', \`idx\` varchar(140) NULL, \`tenant_id\` varchar(36) NOT NULL, UNIQUE INDEX \`IDX_5dd4caf3cc4f6cb6647fc1f1e7\` (\`email\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`items\` (\`id\` varchar(36) NOT NULL, \`code\` varchar(255) NOT NULL, \`name\` varchar(255) NOT NULL, \`description\` varchar(255) NULL, \`type\` enum ('Raw Material', 'Semi Finished', 'Finished Good', 'Service', 'Template') NOT NULL DEFAULT 'Raw Material', \`status\` enum ('Active', 'Inactive', 'Discontinued') NOT NULL DEFAULT 'Active', \`stockUom\` varchar(255) NULL, \`purchaseUom\` varchar(255) NULL, \`salesUom\` varchar(255) NULL, \`standardRate\` decimal(15,4) NULL, \`lastPurchaseRate\` decimal(15,4) NULL, \`valuationRate\` decimal(15,4) NULL, \`minOrderQty\` decimal(15,4) NOT NULL DEFAULT '0.0000', \`safetyStock\` decimal(15,4) NOT NULL DEFAULT '0.0000', \`leadTimeDays\` decimal(15,4) NOT NULL DEFAULT '0.0000', \`isMaintainStock\` tinyint NOT NULL DEFAULT 1, \`isFixedAsset\` tinyint NOT NULL DEFAULT 0, \`allowNegativeStock\` tinyint NOT NULL DEFAULT 1, \`hasBatchNo\` tinyint NOT NULL DEFAULT 0, \`hasSerialNo\` tinyint NOT NULL DEFAULT 0, \`hasExpiryDate\` tinyint NOT NULL DEFAULT 0, \`brand\` varchar(255) NULL, \`itemGroup\` varchar(255) NULL, \`weightPerUnit\` int NULL, \`weightUom\` varchar(255) NULL, \`image\` varchar(255) NULL, \`thumbnail\` varchar(255) NULL, \`specifications\` text NULL, \`qualityInspectionTemplate\` text NULL, \`inspectionRequiredBeforePurchase\` text NULL, \`inspectionRequiredBeforeDelivery\` text NULL, \`tenant_id\` varchar(36) NOT NULL, \`created_by\` varchar(36) NULL, \`modified_by\` varchar(36) NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_1b0a705ce0dc5430c020a0ec31\` (\`code\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`production_plan_items\` (\`id\` varchar(36) NOT NULL, \`itemCode\` varchar(100) NOT NULL, \`itemName\` varchar(200) NOT NULL, \`description\` text NULL, \`plannedQty\` decimal(15,3) NOT NULL, \`producedQty\` decimal(15,3) NOT NULL DEFAULT '0.000', \`pendingQty\` decimal(15,3) NOT NULL DEFAULT '0.000', \`uom\` varchar(50) NOT NULL, \`unitCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`totalCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`requiredDate\` date NULL, \`bomReference\` varchar(100) NULL, \`warehouse\` varchar(100) NULL, \`specifications\` json NULL, \`metadata\` json NULL, \`production_plan_id\` varchar(36) NOT NULL, \`item_id\` varchar(36) NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`work_order_tasks\` (\`id\` varchar(36) NOT NULL, \`taskNumber\` varchar(100) NOT NULL, \`title\` varchar(200) NOT NULL, \`description\` text NULL, \`status\` enum ('Pending', 'In Progress', 'On Hold', 'Completed', 'Cancelled', 'Failed') NOT NULL DEFAULT 'Pending', \`type\` enum ('Setup', 'Operation', 'Inspection', 'Packaging', 'Quality Check', 'Maintenance', 'Cleanup') NOT NULL DEFAULT 'Operation', \`sequence\` int NOT NULL DEFAULT '1', \`operation\` varchar(100) NULL, \`workstation\` varchar(100) NULL, \`machine\` varchar(100) NULL, \`estimatedHours\` decimal(10,2) NOT NULL DEFAULT '0.00', \`actualHours\` decimal(10,2) NOT NULL DEFAULT '0.00', \`hourRate\` decimal(15,2) NOT NULL DEFAULT '0.00', \`operatingCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`plannedStartTime\` datetime NULL, \`plannedEndTime\` datetime NULL, \`actualStartTime\` datetime NULL, \`actualEndTime\` datetime NULL, \`completedQty\` decimal(15,3) NOT NULL DEFAULT '0.000', \`rejectedQty\` decimal(15,3) NOT NULL DEFAULT '0.000', \`instructions\` text NULL, \`qualityParameters\` text NULL, \`notes\` text NULL, \`timeLog\` json NULL, \`qualityData\` json NULL, \`metadata\` json NULL, \`work_order_id\` varchar(36) NOT NULL, \`assigned_to\` varchar(36) NULL, \`completed_by\` varchar(36) NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`completedAt\` datetime NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`work_orders\` (\`id\` varchar(36) NOT NULL, \`workOrderNumber\` varchar(100) NOT NULL, \`title\` varchar(200) NOT NULL, \`description\` text NULL, \`status\` enum ('Draft', 'Released', 'In Progress', 'On Hold', 'Completed', 'Cancelled', 'Closed') NOT NULL DEFAULT 'Draft', \`priority\` enum ('Low', 'Normal', 'High', 'Urgent') NOT NULL DEFAULT 'Normal', \`productionItem\` varchar(100) NOT NULL, \`itemName\` varchar(200) NOT NULL, \`qty\` decimal(15,3) NOT NULL, \`producedQty\` decimal(15,3) NOT NULL DEFAULT '0.000', \`rejectedQty\` decimal(15,3) NOT NULL DEFAULT '0.000', \`stockUom\` varchar(50) NOT NULL, \`bomNo\` varchar(100) NULL, \`salesOrder\` varchar(100) NULL, \`project\` varchar(100) NULL, \`sourceWarehouse\` varchar(100) NULL, \`wipWarehouse\` varchar(100) NULL, \`fgWarehouse\` varchar(100) NULL, \`scrapWarehouse\` varchar(100) NULL, \`plannedStartDate\` datetime NULL, \`plannedEndDate\` datetime NULL, \`expectedDeliveryDate\` date NULL, \`actualStartDate\` datetime NULL, \`actualEndDate\` datetime NULL, \`plannedOperatingCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`actualOperatingCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`materialCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`totalCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`allowAlternativeItem\` tinyint NOT NULL DEFAULT 0, \`useMultiLevelBom\` tinyint NOT NULL DEFAULT 1, \`skipTransfer\` tinyint NOT NULL DEFAULT 0, \`hasSerialNo\` tinyint NOT NULL DEFAULT 0, \`hasBatchNo\` tinyint NOT NULL DEFAULT 0, \`batchSize\` decimal(15,3) NOT NULL DEFAULT '0.000', \`metadata\` json NULL, \`tenant_id\` varchar(36) NOT NULL, \`production_plan_id\` varchar(36) NULL, \`item_id\` varchar(36) NULL, \`created_by\` varchar(36) NOT NULL, \`assigned_to\` varchar(36) NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_f26e571a0d252246e65c559eb8\` (\`workOrderNumber\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`production_plans\` (\`id\` varchar(36) NOT NULL, \`planNumber\` varchar(100) NOT NULL, \`title\` varchar(200) NOT NULL, \`description\` text NULL, \`status\` enum ('Draft', 'Submitted', 'In Progress', 'Completed', 'Cancelled') NOT NULL DEFAULT 'Draft', \`planDate\` date NOT NULL, \`startDate\` date NOT NULL, \`endDate\` date NOT NULL, \`totalPlannedQty\` decimal(15,3) NOT NULL DEFAULT '0.000', \`totalProducedQty\` decimal(15,3) NOT NULL DEFAULT '0.000', \`estimatedCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`actualCost\` decimal(15,2) NOT NULL DEFAULT '0.00', \`priority\` varchar(100) NULL, \`metadata\` json NULL, \`tenant_id\` varchar(36) NOT NULL, \`created_by\` varchar(36) NOT NULL, \`approved_by\` varchar(36) NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`approvedAt\` datetime NULL, \`startedAt\` datetime NULL, \`completedAt\` datetime NULL, UNIQUE INDEX \`IDX_648bfc9f11569ea84fd2b39921\` (\`planNumber\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`tabUser\` ADD CONSTRAINT \`FK_76d5b6145e26ba443499b7e44cb\` FOREIGN KEY (\`tenant_id\`) REFERENCES \`tabTenant\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`items\` ADD CONSTRAINT \`FK_d7d027b642add7f0e77c36b874f\` FOREIGN KEY (\`tenant_id\`) REFERENCES \`tabTenant\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`items\` ADD CONSTRAINT \`FK_25a958155bb9a9d741210749e07\` FOREIGN KEY (\`created_by\`) REFERENCES \`tabUser\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`items\` ADD CONSTRAINT \`FK_2b4616ac46567ad47e0026030d2\` FOREIGN KEY (\`modified_by\`) REFERENCES \`tabUser\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`production_plan_items\` ADD CONSTRAINT \`FK_3848773038dda04421756ed1a31\` FOREIGN KEY (\`production_plan_id\`) REFERENCES \`production_plans\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`production_plan_items\` ADD CONSTRAINT \`FK_bfb5656ffc6201cae6e24bcbbb5\` FOREIGN KEY (\`item_id\`) REFERENCES \`items\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`work_order_tasks\` ADD CONSTRAINT \`FK_09f4588dbc7ec1e246aeb6ee555\` FOREIGN KEY (\`work_order_id\`) REFERENCES \`work_orders\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`work_order_tasks\` ADD CONSTRAINT \`FK_7b6382cc338027d797c02c08887\` FOREIGN KEY (\`assigned_to\`) REFERENCES \`tabUser\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`work_order_tasks\` ADD CONSTRAINT \`FK_12c4b7d53c702fa1175c8ea1547\` FOREIGN KEY (\`completed_by\`) REFERENCES \`tabUser\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`work_orders\` ADD CONSTRAINT \`FK_0059be3d968bef25dcf779f043e\` FOREIGN KEY (\`tenant_id\`) REFERENCES \`tabTenant\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`work_orders\` ADD CONSTRAINT \`FK_448386053d54c62e8b976cc611e\` FOREIGN KEY (\`production_plan_id\`) REFERENCES \`production_plans\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`work_orders\` ADD CONSTRAINT \`FK_ba9233bf837be1df36d25e3a939\` FOREIGN KEY (\`item_id\`) REFERENCES \`items\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`work_orders\` ADD CONSTRAINT \`FK_b520b436fb6ce9fabb3de65aeb7\` FOREIGN KEY (\`created_by\`) REFERENCES \`tabUser\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`work_orders\` ADD CONSTRAINT \`FK_f10ffb04ddc99112db4523117c4\` FOREIGN KEY (\`assigned_to\`) REFERENCES \`tabUser\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`production_plans\` ADD CONSTRAINT \`FK_0a60dfceafde9f802bdf5443304\` FOREIGN KEY (\`tenant_id\`) REFERENCES \`tabTenant\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`production_plans\` ADD CONSTRAINT \`FK_aeb91fc016c969848a5db32bb52\` FOREIGN KEY (\`created_by\`) REFERENCES \`tabUser\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`production_plans\` ADD CONSTRAINT \`FK_b19871f2d11ca7f4ee5e21db73e\` FOREIGN KEY (\`approved_by\`) REFERENCES \`tabUser\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`production_plans\` DROP FOREIGN KEY \`FK_b19871f2d11ca7f4ee5e21db73e\``);
        await queryRunner.query(`ALTER TABLE \`production_plans\` DROP FOREIGN KEY \`FK_aeb91fc016c969848a5db32bb52\``);
        await queryRunner.query(`ALTER TABLE \`production_plans\` DROP FOREIGN KEY \`FK_0a60dfceafde9f802bdf5443304\``);
        await queryRunner.query(`ALTER TABLE \`work_orders\` DROP FOREIGN KEY \`FK_f10ffb04ddc99112db4523117c4\``);
        await queryRunner.query(`ALTER TABLE \`work_orders\` DROP FOREIGN KEY \`FK_b520b436fb6ce9fabb3de65aeb7\``);
        await queryRunner.query(`ALTER TABLE \`work_orders\` DROP FOREIGN KEY \`FK_ba9233bf837be1df36d25e3a939\``);
        await queryRunner.query(`ALTER TABLE \`work_orders\` DROP FOREIGN KEY \`FK_448386053d54c62e8b976cc611e\``);
        await queryRunner.query(`ALTER TABLE \`work_orders\` DROP FOREIGN KEY \`FK_0059be3d968bef25dcf779f043e\``);
        await queryRunner.query(`ALTER TABLE \`work_order_tasks\` DROP FOREIGN KEY \`FK_12c4b7d53c702fa1175c8ea1547\``);
        await queryRunner.query(`ALTER TABLE \`work_order_tasks\` DROP FOREIGN KEY \`FK_7b6382cc338027d797c02c08887\``);
        await queryRunner.query(`ALTER TABLE \`work_order_tasks\` DROP FOREIGN KEY \`FK_09f4588dbc7ec1e246aeb6ee555\``);
        await queryRunner.query(`ALTER TABLE \`production_plan_items\` DROP FOREIGN KEY \`FK_bfb5656ffc6201cae6e24bcbbb5\``);
        await queryRunner.query(`ALTER TABLE \`production_plan_items\` DROP FOREIGN KEY \`FK_3848773038dda04421756ed1a31\``);
        await queryRunner.query(`ALTER TABLE \`items\` DROP FOREIGN KEY \`FK_2b4616ac46567ad47e0026030d2\``);
        await queryRunner.query(`ALTER TABLE \`items\` DROP FOREIGN KEY \`FK_25a958155bb9a9d741210749e07\``);
        await queryRunner.query(`ALTER TABLE \`items\` DROP FOREIGN KEY \`FK_d7d027b642add7f0e77c36b874f\``);
        await queryRunner.query(`ALTER TABLE \`tabUser\` DROP FOREIGN KEY \`FK_76d5b6145e26ba443499b7e44cb\``);
        await queryRunner.query(`DROP INDEX \`IDX_648bfc9f11569ea84fd2b39921\` ON \`production_plans\``);
        await queryRunner.query(`DROP TABLE \`production_plans\``);
        await queryRunner.query(`DROP INDEX \`IDX_f26e571a0d252246e65c559eb8\` ON \`work_orders\``);
        await queryRunner.query(`DROP TABLE \`work_orders\``);
        await queryRunner.query(`DROP TABLE \`work_order_tasks\``);
        await queryRunner.query(`DROP TABLE \`production_plan_items\``);
        await queryRunner.query(`DROP INDEX \`IDX_1b0a705ce0dc5430c020a0ec31\` ON \`items\``);
        await queryRunner.query(`DROP TABLE \`items\``);
        await queryRunner.query(`DROP INDEX \`IDX_5dd4caf3cc4f6cb6647fc1f1e7\` ON \`tabUser\``);
        await queryRunner.query(`DROP TABLE \`tabUser\``);
        await queryRunner.query(`DROP INDEX \`IDX_a2e29961f7f743293fff382608\` ON \`tabTenant\``);
        await queryRunner.query(`DROP INDEX \`IDX_aae07c1d4e5e4552f8d5f1cbd2\` ON \`tabTenant\``);
        await queryRunner.query(`DROP TABLE \`tabTenant\``);
    }

}
